xlab("Uhrzeit") +
ylab("Fahrradauufkommen") +
theme_bw() +
geom_line(data = predict1, aes(x = Value, y = Accidents, color='OLS'), size = 1.5)
plot25
# Create an ols regression model
model1 <- lm(Accidents ~ Value + Value2 + Value3, data=ProjectionData)
predict1 <- as.data.frame(predict(model1,ProjectionData))
predict1$Value = ProjectionData$Value
names(predict1)[1]="Accidents"
plot25 = ggplot(data=ProjectionData)+
geom_point(aes(x=Value, y=Accidents), size = 2, alpha = 0.2) +
labs(title = "Vergleich zwischen OLS und Support Vector Regression"
, color = "Methode") +
ggtitle("Vergleich zwischen OLS und Support Vector Regression") +
xlab("Uhrzeit") +
ylab("Fahrradauufkommen") +
theme_bw() +
geom_line(data = predict1, aes(x = Value, y = Accidents, color='OLS'), size = 1.5)
plot25
plot_corr = ggplot(data=ProjectionData)+
geom_point(aes(x=Value, y=Accidents128), size = 2, alpha = 0.2) +
geom_smooth(aes(x=Value, y=Accidents128),method='lm', size = 2) +
labs(y = "Unfälle"
, x = "Anzahl der passierenden Radfahrer",
title ="Unfälle im 500 Meter Radius") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 26))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/MapProjection/Plots")
png(file="Korrelationsgraf128.png",width=1000, height=1000)
print(plot_corr)
dev.off()
plot_corr
plot_corr = ggplot(data=ProjectionData)+
geom_point(aes(x=Value, y=Accidents128), size = 2, alpha = 0.2) +
geom_smooth(aes(x=Value, y=Accidents128),method='lm', size = 2) +
labs(y = "Unfälle"
, x = "Anzahl der passierenden Radfahrer",
title ="Unfälle im 128 Meter Radius") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 26))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/MapProjection/Plots")
png(file="Korrelationsgraf128.png",width=1000, height=1000)
print(plot_corr)
dev.off()
plot_corr = ggplot(data=ProjectionData)+
geom_point(aes(x=Value, y=Accidents256), size = 2, alpha = 0.2) +
geom_smooth(aes(x=Value, y=Accidents256),method='lm', size = 2) +
labs(y = "Unfälle"
, x = "Anzahl der passierenden Radfahrer",
title ="Unfälle im 256 Meter Radius") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 26))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/MapProjection/Plots")
png(file="Korrelationsgraf256.png",width=1000, height=1000)
print(plot_corr)
dev.off()
plot_corr = ggplot(data=ProjectionData)+
geom_point(aes(x=Value, y=Accidents512), size = 2, alpha = 0.2) +
geom_smooth(aes(x=Value, y=Accidents512),method='lm', size = 2) +
labs(y = "Unfälle"
, x = "Anzahl der passierenden Radfahrer",
title ="Unfälle im 500 Meter Radius") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 26))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/MapProjection/Plots")
png(file="Korrelationsgraf512.png",width=1000, height=1000)
print(plot_corr)
dev.off()
ProjectionData$Accidents = ProjectionData$Accidents128
summary(ProjectionData$Accidents)
ProjectionData$normalized = (ProjectionData$Accidents-min(ProjectionData$Accidents))/(max(ProjectionData$Accidents)-min(ProjectionData$Accidents))
ProjectionData$normalized = (((ProjectionData$Accidents-min(ProjectionData$Accidents))/2) + ((max(ProjectionData$Accidents)-min(ProjectionData$Accidents))/2))/(max(ProjectionData$Accidents)-min(ProjectionData$Accidents))
map_corr = ggmap(mad_map) +
geom_segment(data = ProjectionData, aes(x = Lon, y = Lat, xend = Lon2, yend = Lat2, color = Value, alpha = normalized), size = 2, lineend = "round") +
ggtitle(paste("Fahrradunfälle in 500 Meter Nähe")) +
scale_colour_gradientn(limits = c(0, max(ProjectionData$Value)), space = "Lab",
colours = c("black","darkblue","blue","violet","red","orange", "yellow")) +
theme_bw() +
theme(text = element_text(size = 20)) +
labs(y = "Längengrad", x = "Breitengrad", color ="Radfahrer", alpha = "Unfallsdichte")
png(file="Korrelationskarte_Münster.png",width=1200, height=1200)
print(map_corr)
dev.off()
ggmap(mad_map) +
geom_segment(data = ProjectionData, aes(x = Lon, y = Lat, xend = Lon2, yend = Lat2, color = Value, alpha = normalized), size = 2, lineend = "round") +
ggtitle(paste("Fahrradunfälle in 500 Meter Nähe")) +
scale_colour_gradientn(limits = c(0, max(ProjectionData$Value)), space = "Lab",
colours = c("black","darkblue","blue","violet","red","orange", "yellow")) +
theme_bw() +
theme(text = element_text(size = 20)) +
labs(y = "Längengrad", x = "Breitengrad", color ="Radfahrer", alpha = "Unfallsdichte")
map_corr = ggmap(mad_map) +
geom_segment(data = ProjectionData, aes(x = Lon, y = Lat, xend = Lon2, yend = Lat2, color = Value, alpha = normalized), size = 2, lineend = "round") +
ggtitle(paste("Fahrradunfälle in 128 Meter Nähe")) +
scale_colour_gradientn(limits = c(0, max(ProjectionData$Value)), space = "Lab",
colours = c("black","darkblue","blue","violet","red","orange", "yellow")) +
theme_bw() +
theme(text = element_text(size = 20)) +
labs(y = "Längengrad", x = "Breitengrad", color ="Radfahrer", alpha = "Unfallsdichte")
ProjectionData$normalized = (ProjectionData$Accidents-min(ProjectionData$Accidents))/(max(ProjectionData$Accidents)-min(ProjectionData$Accidents))
map_corr = ggmap(mad_map) +
geom_segment(data = ProjectionData, aes(x = Lon, y = Lat, xend = Lon2, yend = Lat2, color = Value, alpha = normalized), size = 2, lineend = "round") +
ggtitle(paste("Fahrradunfälle in 128 Meter Nähe")) +
scale_colour_gradientn(limits = c(0, max(ProjectionData$Value)), space = "Lab",
colours = c("black","darkblue","blue","violet","red","orange", "yellow")) +
theme_bw() +
theme(text = element_text(size = 20)) +
labs(y = "Längengrad", x = "Breitengrad", color ="Radfahrer", alpha = "Unfallsdichte")
png(file="Korrelationskarte_Münster.png",width=1200, height=1200)
print(map_corr)
dev.off()
cor(ProjectionData$Value, ProjectionData$Accidents, method = c("pearson", "kendall", "spearman"))
cor.test(ProjectionData$Value, ProjectionData$Accidents, method=c("pearson", "kendall", "spearman"))
map_corr = ggmap(mad_map) +
geom_segment(data = ProjectionData, aes(x = Lon, y = Lat, xend = Lon2, yend = Lat2, color = Value, alpha = normalized), size = 2, lineend = "round") +
ggtitle(paste("Fahrradunfälle in 128 Meter Nähe")) +
scale_colour_gradientn(limits = c(0, max(ProjectionData$Value)), space = "Lab",
colours = c("black","darkblue","blue","violet","red","orange", "yellow")) +
theme_bw() +
theme(text = element_text(size = 20)) +
labs(y = "Längengrad", x = "Breitengrad", color ="Radfahrer", alpha = "Unfalldichte")
png(file="Korrelationskarte_Münster.png",width=1200, height=1200)
print(map_corr)
dev.off()
plot_corr = ggplot(data=ProjectionData)+
geom_point(aes(x=Value, y=Accidents1024), size = 2, alpha = 0.2) +
geom_smooth(aes(x=Value, y=Accidents1024),method='lm', size = 2) +
labs(y = "Unfälle"
, x = "Anzahl der passierenden Radfahrer",
title ="Unfälle im 1 Km Radius") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 26))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/MapProjection/Plots")
png(file="Korrelationsgraf1024.png",width=1000, height=1000)
print(plot_corr)
dev.off()
ProjectionData$Accidents1024
summary(ProjectionData$Accidents1024)
plot_corr = ggplot(data=ProjectionData)+
geom_point(aes(x=Value, y=Accidents64), size = 2, alpha = 0.2) +
geom_smooth(aes(x=Value, y=Accidents64),method='lm', size = 2) +
labs(y = "Unfälle"
, x = "Anzahl der passierenden Radfahrer",
title ="Unfälle im 64 Meter Radius") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 26))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/MapProjection/Plots")
png(file="Korrelationsgraf64.png",width=1000, height=1000)
print(plot_corr)
dev.off()
cor(ProjectionData$Value, ProjectionData$Accidents16, method = c("pearson", "kendall", "spearman"))
cor(ProjectionData$Value, ProjectionData$Accidents32, method = c("pearson", "kendall", "spearman"))
cor(ProjectionData$Value, ProjectionData$Accidents64, method = c("pearson", "kendall", "spearman"))
cor(ProjectionData$Value, ProjectionData$Accidents128, method = c("pearson", "kendall", "spearman"))
cor(ProjectionData$Value, ProjectionData$Accidents256, method = c("pearson", "kendall", "spearman"))
cor(ProjectionData$Value, ProjectionData$Accidents512, method = c("pearson", "kendall", "spearman"))
c1 = cor(ProjectionData$Value, ProjectionData$Accidents16, method = c("pearson", "kendall", "spearman"))
c2 = cor(ProjectionData$Value, ProjectionData$Accidents32, method = c("pearson", "kendall", "spearman"))
c3 = cor(ProjectionData$Value, ProjectionData$Accidents64, method = c("pearson", "kendall", "spearman"))
c4 = cor(ProjectionData$Value, ProjectionData$Accidents128, method = c("pearson", "kendall", "spearman"))
c5 = cor(ProjectionData$Value, ProjectionData$Accidents256, method = c("pearson", "kendall", "spearman"))
c6 = cor(ProjectionData$Value, ProjectionData$Accidents512, method = c("pearson", "kendall", "spearman"))
plot = ggplot(data=ProjectionData)+
geom_line(aes(x=c(16,32,65,128,256,512), y=c(c1,c2,c3,c4,c5,c6)), size = 2, alpha = 0.2) +
labs(y = "Unfälle"
, x = "Anzahl der passierenden Radfahrer",
title ="Unfälle im 64 Meter Radius") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 26))
plot
plot = ggplot()+
geom_line(aes(x=c(16,32,65,128,256,512), y=c(c1,c2,c3,c4,c5,c6)), size = 2, alpha = 0.2) +
labs(y = "Unfälle"
, x = "Anzahl der passierenden Radfahrer",
title ="Unfälle im 64 Meter Radius") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 26))
plot
plot = ggplot()+
geom_line(aes(x=c(16,32,65,128,256,512), y=c(c1,c2,c3,c4,c5,c6)), size = 3, color = "black") +
labs(y = "Unfälle"
, x = "Anzahl der passierenden Radfahrer",
title ="Unfälle im 64 Meter Radius") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 26))
plot
plot = ggplot()+
geom_line(aes(x=c(16,32,65,128,256,512), y=c(c1,c2,c3,c4,c5,c6)), size = 3, color = "black") +
labs(y = "Korrelation"
, x = "Unfallradius",
title ="Korrelation von Unfällen und Radverkehr") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 26))
plot
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/thesis_german/Plots")
png(file="Korrelations.png",width=1000, height=1000)
print(plot_corr)
dev.off()
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/thesis_german/Plots")
png(file="Korrelation.png",width=1000, height=1000)
print(plot_corr)
dev.off()
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/thesis_german/Plots")
png(file="Korrelation.png",width=1000, height=1000)
print(plot)
dev.off()
plot = ggplot()+
geom_line(aes(x=c(16,32,65,128,256,512), y=c(c1,c2,c3,c4,c5,c6)), size = 3, color = "blue") +
labs(y = "Korrelation"
, x = "Unfallradius",
title ="Korrelation von Unfällen und Radverkehr") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 26))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/thesis_german/Plots")
png(file="Korrelation.png",width=1000, height=1000)
print(plot)
dev.off()
plot = ggplot()+
geom_line(aes(x=c(16,32,65,128,256,512), y=c(c1,c2,c3,c4,c5,c6)), size = 2, color = "blue") +
labs(y = "Korrelation"
, x = "Unfallradius",
title ="Korrelation von Unfällen und Radverkehr") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 26))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/thesis_german/Plots")
png(file="Korrelation.png",width=1000, height=1000)
print(plot)
dev.off()
plot = ggplot()+
geom_line(aes(x=c(16,32,65,128,256,512), y=c(c1,c2,c3,c4,c5,c6)), size = 2, color = "blue", lineend = "round") +
labs(y = "Korrelation"
, x = "Unfallradius",
title ="Korrelation von Unfällen und Radverkehr") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 26))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/thesis_german/Plots")
png(file="Korrelation.png",width=1000, height=1000)
print(plot)
dev.off()
plot = ggplot()+
geom_line(aes(x=c(16,32,65,128,256,512), y=c(c1,c2,c3,c4,c5,c6)), size = 2, color = "blue", lineend = "round") +
labs(y = "Korrelation"
, x = "Unfallradius",
title ="Korrelation von Unfällen und Radverkehr") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 36))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/thesis_german/Plots")
png(file="Korrelation.png",width=1000, height=1000)
print(plot)
dev.off()
plot = ggplot()+
geom_line(aes(x=c(16,32,65,128,256,512), y=c(c1,c2,c3,c4,c5,c6)), size = 2, color = "blue", lineend = "round") +
labs(y = "Korrelation"
, x = "Unfallradius",
title ="Korrelation von Unfällen und Radverkehr") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 42))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/thesis_german/Plots")
png(file="Korrelation.png",width=1000, height=1000)
print(plot)
dev.off()
plot = ggplot()+
geom_line(aes(x=c(16,32,65,128,256,512), y=c(c1,c2,c3,c4,c5,c6)), size = 2, color = "blue", lineend = "round") +
labs(y = "Korrelation"
, x = "Unfallradius",
title ="") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 40))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/thesis_german/Plots")
png(file="Korrelation.png",width=1000, height=1000)
print(plot)
dev.off()
plot = ggplot()+
geom_line(aes(x=c(16,32,65,128,256,512), y=c(c1,c2,c3,c4,c5,c6)), size = 2, color = "blue", lineend = "round") +
labs(y = "Korrelation"
, x = "Unfallradius",
title ="") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 60))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/thesis_german/Plots")
png(file="Korrelation.png",width=1000, height=1000)
print(plot)
dev.off()
plot = ggplot()+
geom_line(aes(x=c(16,32,65,128,256,512), y=c(c1,c2,c3,c4,c5,c6)), size = 4, color = "blue", lineend = "round") +
labs(y = "Korrelation"
, x = "Unfallradius",
title ="") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 60))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/thesis_german/Plots")
png(file="Korrelation.png",width=1000, height=1000)
print(plot)
dev.off()
plot_corr = ggplot(data=ProjectionData)+
geom_point(aes(x=Value, y=Accidents64), size = 2, alpha = 0.2) +
geom_smooth(aes(x=Value, y=Accidents64),method='lm', size = 4) +
labs(y = "Unfälle"
, x = "Anzahl der passierenden Radfahrer",
title ="") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 60))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/MapProjection/Plots")
png(file="Korrelationsgraf64.png",width=1000, height=1000)
print(plot_corr)
dev.off()
plot_corr = ggplot(data=ProjectionData)+
geom_point(aes(x=Value, y=Accidents128), size = 2, alpha = 0.2) +
geom_smooth(aes(x=Value, y=Accidents128),method='lm', size = 4) +
labs(y = "Unfälle"
, x = "Anzahl der passierenden Radfahrer",
title ="") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 60))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/MapProjection/Plots")
png(file="Korrelationsgraf128.png",width=1000, height=1000)
print(plot_corr)
dev.off()
plot_corr = ggplot(data=ProjectionData)+
geom_point(aes(x=Value, y=Accidents256), size = 2, alpha = 0.2) +
geom_smooth(aes(x=Value, y=Accidents256),method='lm', size = 4) +
labs(y = "Unfälle"
, x = "Anzahl der passierenden Radfahrer",
title ="") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 60))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/MapProjection/Plots")
png(file="Korrelationsgraf256.png",width=1000, height=1000)
print(plot_corr)
dev.off()
plot_corr = ggplot(data=ProjectionData)+
geom_point(aes(x=Value, y=Accidents512), size = 2, alpha = 0.2) +
geom_smooth(aes(x=Value, y=Accidents512),method='lm', size = 4) +
labs(y = "Unfälle"
, x = "Anzahl der passierenden Radfahrer",
title ="") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 60))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/MapProjection/Plots")
png(file="Korrelationsgraf512.png",width=1000, height=1000)
print(plot_corr)
dev.off()
plot_corr = ggplot(data=ProjectionData)+
geom_point(aes(x=Value, y=Accidents64), size = 2, alpha = 0.2) +
geom_smooth(aes(x=Value, y=Accidents64),method='lm', size = 4) +
labs(y = "Unfälle"
, x = "Anzahl der Radfahrer",
title ="") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 60))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/thesis_german/Plots")
png(file="Korrelationsgraf64.png",width=1000, height=1000)
print(plot_corr)
dev.off()
plot_corr = ggplot(data=ProjectionData)+
geom_point(aes(x=Value, y=Accidents128), size = 2, alpha = 0.2) +
geom_smooth(aes(x=Value, y=Accidents128),method='lm', size = 4) +
labs(y = "Unfälle"
, x = "Anzahl der Radfahrer",
title ="") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 60))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/thesis_german/Plots")
png(file="Korrelationsgraf128.png",width=1000, height=1000)
print(plot_corr)
dev.off()
plot_corr = ggplot(data=ProjectionData)+
geom_point(aes(x=Value, y=Accidents256), size = 2, alpha = 0.2) +
geom_smooth(aes(x=Value, y=Accidents256),method='lm', size = 4) +
labs(y = "Unfälle"
, x = "Anzahl der Radfahrer",
title ="") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 60))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/thesis_german/Plots")
png(file="Korrelationsgraf256.png",width=1000, height=1000)
print(plot_corr)
dev.off()
plot_corr = ggplot(data=ProjectionData)+
geom_point(aes(x=Value, y=Accidents512), size = 2, alpha = 0.2) +
geom_smooth(aes(x=Value, y=Accidents512),method='lm', size = 4) +
labs(y = "Unfälle"
, x = "Anzahl der Radfahrer",
title ="") +
theme_bw() +
#theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold")) +
theme(text = element_text(size = 60))
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/thesis_german/Plots")
png(file="Korrelationsgraf512.png",width=1000, height=1000)
print(plot_corr)
dev.off()
map_corr = ggmap(mad_map) +
geom_segment(data = ProjectionData, aes(x = Lon, y = Lat, xend = Lon2, yend = Lat2, color = Value, alpha = normalized), size = 2, lineend = "round") +
ggtitle(paste("Fahrradunfälle in 128 Meter Nähe")) +
scale_colour_gradientn(limits = c(0, max(ProjectionData$Value)), space = "Lab",
colours = c("black","darkblue","blue","violet","red","orange", "yellow")) +
theme_bw() +
theme(text = element_text(size = 30)) +
labs(y = "Längengrad", x = "Breitengrad", color ="Radfahrer", alpha = "Unfalldichte")
png(file="Korrelationskarte_Münster.png",width=1200, height=1200)
print(map_corr)
dev.off()
map_corr = ggmap(mad_map) +
geom_segment(data = ProjectionData, aes(x = Lon, y = Lat, xend = Lon2, yend = Lat2, color = Value, alpha = normalized), size = 2, lineend = "round") +
ggtitle(paste("Fahrradunfälle in 128 Meter Nähe")) +
scale_colour_gradientn(limits = c(0, max(ProjectionData$Value)), space = "Lab",
colours = c("black","darkblue","blue","violet","red","orange", "yellow")) +
theme_bw() +
theme(text = element_text(size = 20)) +
labs(y = "Längengrad", x = "Breitengrad", color ="Radfahrer", alpha = "Unfalldichte")
png(file="Korrelationskarte_Münster.png",width=1200, height=1200)
print(map_corr)
dev.off()
map_corr = ggmap(mad_map) +
geom_segment(data = ProjectionData, aes(x = Lon, y = Lat, xend = Lon2, yend = Lat2, color = Value, alpha = normalized), size = 2, lineend = "round") +
ggtitle(paste("Fahrradunfälle in 128 Meter Nähe")) +
scale_colour_gradientn(limits = c(0, max(ProjectionData$Value)), space = "Lab",
colours = c("black","darkblue","blue","violet","red","orange", "yellow")) +
theme_bw() +
theme(text = element_text(size = 30)) +
labs(y = "Längengrad", x = "Breitengrad", color ="Radfahrer", alpha = "Unfalldichte")
png(file="Korrelationskarte_Münster.png",width=1200, height=1200)
print(map_corr)
dev.off()
map_plot = ggmap(mad_map) +
geom_segment(data = mapData, aes(x = Lon, y = Lat, xend = Lon2, yend = Lat2, color = Accidents64), size = 1.4, alpha = 1, lineend = "round") +
ggtitle(paste("Fahrradunfälle in 64 Meter Nähe")) +
scale_colour_gradientn(limits = c(0, max(mapData$Accidents64)), space = "Lab",
colours = c("black","darkblue","blue","violet","red","orange", "yellow")) +
theme_bw() +
theme(text = element_text(size = 30)) +
labs(y = "Längengrad", x = "Breitengrad", color ="Unfälle")
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/thesis_german/Plots")
png(file="Unfallkarte_Münster.png",width=1200, height=1200)
print(map_plot)
dev.off()
levels(as.factor(AccidentData$bicycle))
#Load Data Set
AccidentData = read.csv(file = "gefilterte_unfaelle.csv",sep=",", encoding="ISO-8859-1")
names(AccidentData)
#Source storage location (outside the GitHub Repository)
#Because of file size limitation
#files about 100 MB have to be excluded
setwd("D:/STUDIUM/Münster/7. Semester/Masterarbeit Daten")
#Load Data Set
AccidentData = read.csv(file = "gefilterte_unfaelle.csv",sep=",", encoding="ISO-8859-1")
names(AccidentData)
levels(as.factor(AccidentData$bicycle))
sum(AccidentData$bicycle==4)
sum(AccidentData$bicycle==3)
sum(AccidentData$bicycle==2)
sum(AccidentData$bicycle==1)
levels(as.factor(AccidentData$year))
sum(AccidentData$year==2007)
sum(AccidentData$year==2008)
sum(AccidentData$year==2009)
sum(AccidentData$year==2010)
sum(AccidentData$year==2011)
sum(AccidentData$year==2012)
sum(AccidentData$year==2013)
sum(AccidentData$year==2014)
sum(AccidentData$year==2015)
sum(AccidentData$year==2016)
sum(AccidentData$year==2017)
sum(AccidentData$year==2018)
nlevels(as.factor(AccidentData$latitude))
nrow(AccidentData)
AccidentData = AccidentData[!is.na(AccidentData$latitude), ]
sum(is.na(AccidentData$longitude))
sum(is.na(AccidentData$longitude))
nrow(AccidentData)
c(c1,c2,c3,c4,c5,c6)
rbind(c(16,32,65,128,256,512),c(c1,c2,c3,c4,c5,c6))
cbind(c(16,32,65,128,256,512),c(c1,c2,c3,c4,c5,c6))
as.data.frame(cbind(c(16,32,65,128,256,512),c(c1,c2,c3,c4,c5,c6)))
a = as.data.frame(cbind(c(16,32,65,128,256,512),c(c1,c2,c3,c4,c5,c6)))
a = as.data.frame(cbind(c(16,32,65,128,256,512),c(c1,c2,c3,c4,c5,c6)))
names(a)[1]="radius"
names(a)[2]="correlation"
a
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/thesis_german/Plots")
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/thesis_german/Tables")
a = as.data.frame(cbind(c(16,32,65,128,256,512),c(c1,c2,c3,c4,c5,c6)))
names(a)[1]="radius"
names(a)[2]="correlation"
write.csv(a,"CorrelationPerRadius.csv")
