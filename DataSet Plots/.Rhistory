geom_point(aes(x=Immigrants_Mean, y=Value_Mean), size = 2) +
geom_smooth(aes(x=Immigrants_Mean, y=Value_Mean),method='lm') +
geom_label_repel(aes(x = Immigrants_Mean, y = Value_Mean, label = Town)) +
labs(title = "Durchschn. Radverkehr nach Immigrantenanteil"
, y = "Radfahrer pro Stunde je Stadt"
, x = "Immigrantenanteil") +
scale_x_continuous(labels = comma) +
theme_bw()
plot7
plot8 = ggplot(citties, aes(y=Value_Mean, x=Town, fill=Town)) +
geom_bar(position="dodge", stat="identity") +
theme_bw() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(title = "Durchschnittlicher Radverkehr nach Städten"
, y = "Radfahrer pro Stunde je Zählstelle"
, fill = "Städte")
plot8
setwd("C:/Users/MaxWe/Documents/GitHub/Masterthesis_BikeTrafficForecast/DataSet Plots")
png(file="plot01.png",width=800, height=800)
plot1
dev.off()
png(file="plot02.png",width=800, height=800)
plot2
dev.off()
png(file="plot03.png",width=800, height=800)
plot3
dev.off()
png(file="plot04.png",width=800, height=800)
plot4
dev.off()
png(file="plot05.png",width=800, height=800)
plot5
dev.off()
png(file="plot06.png",width=800, height=800)
plot6
dev.off()
png(file="plot07.png",width=800, height=800)
plot7
dev.off()
png(file="plot08.png",width=800, height=800)
plot8
dev.off()
rm(list=setdiff(ls(), "BikeData"))
#share of observations per city
city_shares = c(1:nlevels(as.factor(BikeData$Town)))
for(i in 1: nlevels(as.factor(BikeData$Town))){
city_shares[i] = sum(BikeData$Town==levels(as.factor(BikeData$Town))[i])
}
city_shares = as.data.frame(cbind(city_shares,levels(as.factor(BikeData$Town))))
names(city_shares)[1]="Observations"
names(city_shares)[2]="Town"
city_shares$Observations = as.numeric(city_shares$Observations)
city_shares$Observations = city_shares$Observations/sum(city_shares$Observations)*100
city_shares2 = city_shares[order(city_shares$Observations,decreasing=TRUE),]
pie(city_shares2$Observations, labels = city_shares2$Town)
plot9 = ggplot(data = city_shares2, aes(x = "", y = -Observations,
fill = reorder(Town, -Observations))) +
geom_bar(stat = "identity", color = "black") +
#geom_label_repel(aes(x = "", y = -Observations, label = round(Observations))) +
labs(title = "Städte nach Anteil am Datensatz", fill = "") +
coord_polar("y") +
theme_bw()
plot9
png(file="plot09.png",width=800, height=800)
plot9
dev.off()
#share of observations per Inhabitants
city_shares = c(1:4)
city_shares[1]=sum(BikeData$Inhabitants<=100000)
city_shares[2]=sum(BikeData$Inhabitants>100000 & BikeData$Inhabitants<=300000)
city_shares[3]=sum(BikeData$Inhabitants>300000 & BikeData$Inhabitants<=1000000)
city_shares[4]=sum(BikeData$Inhabitants>1000000)
city_shares=as.data.frame(cbind(city_shares,c("1: < 100 Tsd","2: 100 Tsd - 300 Tsd","3: 300 Tsd - 1 Mio","4: > 1 Mio")))
city_shares=as.data.frame(cbind(city_shares,c("A","B","C","D")))
names(city_shares)[1]="Observations"
names(city_shares)[2]="Population"
names(city_shares)[3]="Title"
city_shares$Observations = as.numeric(city_shares$Observations)
city_shares$Observations = city_shares$Observations/sum(city_shares$Observations)*100
plot10 = ggplot(city_shares, aes(y=Observations, x=Title, fill = Population)) +
geom_bar(position="dodge", stat="identity")+
theme_bw() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(title = "Anteile des Datensatzes nach Einwohnergröße"
, y = "in %"
, fill = "Einwohnerzahl")
plot10
png(file="plot10.png",width=800, height=800)
plot10
dev.off()
#OSM Data per Counting Station
stations = as.data.frame(matrix(1:18*nlevels(as.factor(BikeData$Station)), nrow = nlevels(as.factor(BikeData$Station)), ncol = 21))
names(stations)[1]="Distance_to_Center"
names(stations)[2]="Cinemas1kmRadius"
names(stations)[3]="ClosestUniBuild"
names(stations)[4]="SuperMarket1kmRadius"
names(stations)[5]="ClothesShop500mmRadius"
names(stations)[6]="ClothesShop2kmRadius"
names(stations)[7]="BusStop1kmRadius"
names(stations)[8]="Signals1kmRadius"
names(stations)[9]="UnmCross1kmRadius"
names(stations)[10]="Tram1kmRadius"
names(stations)[11]="Subway1kmRadius"
names(stations)[12]="ClosestTrainS"
names(stations)[13]="BikeShop1kmRadius"
names(stations)[14]="secondary"
names(stations)[15]="primary"
names(stations)[16]="residential"
names(stations)[17]="living_street"
names(stations)[18]="path"
names(stations)[19]="ClosestBridge"
names(stations)[20]="isBridge"
names(stations)[21]="Value_Mean"
stations$Station=levels(as.factor(BikeData$Station))
for(i in 1:nlevels(as.factor(BikeData$Station))){
d=BikeData[BikeData$Station %in% stations$Station[i],]
stations$Distance_to_Center[i]=d$Distance_to_Center[1]
stations$Cinemas1kmRadius[i]=d$Cinemas1kmRadius[1]
stations$ClosestUniBuild[i]=d$ClosestUniBuild[1]
stations$SuperMarket1kmRadius[i]=d$SuperMarket1kmRadius[1]
stations$ClothesShop500mmRadius[i]=d$ClothesShop500mmRadius[1]
stations$ClothesShop2kmRadius[i]=d$ClothesShop2kmRadius[1]
stations$BusStop1kmRadius[i]=d$BusStop1kmRadius[1]
stations$Signals1kmRadius[i]=d$Signals1kmRadius[1]
stations$UnmCross1kmRadius[i]=d$UnmCross1kmRadius[1]
stations$Tram1kmRadius[i]=d$Tram1kmRadius[1]
stations$Subway1kmRadius[i]=d$Subway1kmRadius[1]
stations$ClosestTrainS[i]=d$ClosestTrainS[1]
stations$BikeShop1kmRadius[i]=d$BikeShop1kmRadius[1]
stations$secondary[i]=d$secondary[1]
stations$primary[i]=d$primary[1]
stations$living_street[i]=d$living_street[1]
stations$path[i]=d$path[1]
stations$ClosestBridge[i]=d$ClosestBridge[1]
stations$isBridge[i]=d$isBridge[1]
stations$Value_Mean[i]=mean(d$Value)
}
plot11 = ggplot(data=stations)+
geom_point(aes(x=Distance_to_Center, y=Value_Mean), size = 2) +
geom_smooth(aes(x=Distance_to_Center, y=Value_Mean),method='lm') +
labs(title = "Durchschnittlicher Radverkehr nach Entfernung zum Zentrum"
, y = "Radfahrer pro Stunde je Zählstelle"
, x = "in M") +
scale_x_continuous(labels = comma) +
theme_bw()
plot11
plot12 = ggplot(data=stations)+
geom_point(aes(x=Cinemas1kmRadius, y=Value_Mean), size = 2) +
geom_smooth(aes(x=Cinemas1kmRadius, y=Value_Mean),method='lm') +
labs(title = "Durchschnittlicher Radverkehr nach Kinos im 1km Radius"
, y = "Radfahrer pro Stunde je Zählstelle"
, x = "Amzahl der Kinos") +
scale_x_continuous(labels = comma) +
theme_bw()
plot12
plot13 = ggplot(data=stations)+
geom_point(aes(x=ClosestUniBuild, y=Value_Mean), size = 2) +
geom_smooth(aes(x=ClosestUniBuild, y=Value_Mean),method='lm') +
labs(title = "Durchschnittlicher Radverkehr nach Entfernung zur Uni"
, y = "Radfahrer pro Stunde je Zählstelle"
, x = "in M") +
scale_x_continuous(labels = comma) +
theme_bw()
plot13
plot14 = ggplot(data=stations)+
geom_point(aes(x=SuperMarket1kmRadius, y=Value_Mean), size = 2) +
geom_smooth(aes(x=SuperMarket1kmRadius, y=Value_Mean),method='lm') +
labs(title = "Durchschnittlicher Radverkehr nach Super Märkten im 1km Radius"
, y = "Radfahrer pro Stunde je Zählstelle"
, x = "Amzahl der Supermärkte") +
scale_x_continuous(labels = comma) +
theme_bw()
plot14
plot15 = ggplot(data=stations)+
geom_point(aes(x=ClothesShop2kmRadius, y=Value_Mean), size = 2) +
geom_smooth(aes(x=ClothesShop2kmRadius, y=Value_Mean),method='lm') +
labs(title = "Durchschnittlicher Radverkehr nach Kleidungsgeschäften im 2km Radius"
, y = "Radfahrer pro Stunde je Zählstelle"
, x = "Amzahl der Kleidungsgeschäfte") +
scale_x_continuous(labels = comma) +
theme_bw()
plot15
plot16 = ggplot(data=stations)+
geom_point(aes(x=BusStop1kmRadius, y=Value_Mean), size = 2) +
geom_smooth(aes(x=BusStop1kmRadius, y=Value_Mean),method='lm') +
labs(title = "Durchschnittlicher Radverkehr nach Bushaltestellen im 1km Radius"
, y = "Radfahrer pro Stunde je Zählstelle"
, x = "Amzahl der Bushaltestellen") +
scale_x_continuous(labels = comma) +
theme_bw()
plot16
plot17 = ggplot(data=stations)+
geom_point(aes(x=Signals1kmRadius, y=Value_Mean), size = 2) +
geom_smooth(aes(x=Signals1kmRadius, y=Value_Mean),method='lm') +
labs(title = "Durchschnittlicher Radverkehr nach Ampeln im 1km Radius"
, y = "Radfahrer pro Stunde je Zählstelle"
, x = "Amzahl der Ampeln") +
scale_x_continuous(labels = comma) +
theme_bw()
plot17
plot18 = ggplot(data=stations)+
geom_point(aes(x=Tram1kmRadius, y=Value_Mean), size = 2) +
geom_smooth(aes(x=Tram1kmRadius, y=Value_Mean),method='lm') +
labs(title = "Durchschnittlicher Radverkehr nach S-Bahnstationen im 1km Radius"
, y = "Radfahrer pro Stunde je Zählstelle"
, x = "Amzahl der S-Bahnstationen") +
scale_x_continuous(labels = comma) +
theme_bw()
plot18
plot19 = ggplot(data=stations)+
geom_point(aes(x=ClosestTrainS, y=Value_Mean), size = 2) +
geom_smooth(aes(x=ClosestTrainS, y=Value_Mean),method='lm') +
labs(title = "Durchschnittlicher Radverkehr nach Entfernung zum nächsten Bahnhof"
, y = "Radfahrer pro Stunde je Zählstelle"
, x = "in M") +
scale_x_continuous(labels = comma) +
theme_bw()
plot19
png(file="plot11.png",width=800, height=800)
plot11
dev.off()
png(file="plot12.png",width=800, height=800)
plot12
dev.off()
png(file="plot13.png",width=800, height=800)
plot13
dev.off()
png(file="plot14.png",width=800, height=800)
plot14
dev.off()
png(file="plot15.png",width=800, height=800)
plot15
dev.off()
png(file="plot16.png",width=800, height=800)
plot16
dev.off()
png(file="plot17.png",width=800, height=800)
plot17
dev.off()
png(file="plot18.png",width=800, height=800)
plot18
dev.off()
png(file="plot19.png",width=800, height=800)
plot19
dev.off()
names(stations)
a = sum(stations$secondary==1)
b = sum(stations$primary==1)
sum(stations$residential==1)
c = sum(stations$living_street==1)
d = sum(stations$path==1)
sum(stations$isBridge==1)
e = sum(stations$secondary==0 & stations$primary==0 & stations$living_street==0 & stations$path==0)
nrow(stations) -a -b -c -d -e
street_type1 = c(a,b,c,d,e)
street_type2 = as.data.frame(cbind(street_type1,c("secondary","primary","living street","path","unknown")))
names(street_type2)[1]="Numbers"
names(street_type2)[2]="Type"
street_type2$Numbers=as.numeric(street_type2$Numbers)
plot20 = ggplot(data = street_type2, aes(x = "", y = -Numbers,
fill = reorder(Type, -Numbers))) +
geom_bar(stat = "identity", color = "black") +
geom_label_repel(aes(x = "", y = -Numbers, label = Numbers)) +
labs(title = "Stationen nach Straßentyp", fill = "") +
coord_polar("y") +
theme_void()
plot20
plot21 = ggplot(data=stations)+
geom_point(aes(x=ClosestBridge, y=Value_Mean), size = 2) +
geom_smooth(aes(x=ClosestBridge, y=Value_Mean),method='lm') +
labs(title = "Durchschnittlicher Radverkehr nach Entfernung zur nächsten Brücke"
, y = "Radfahrer pro Stunde je Zählstelle"
, x = "in M") +
scale_x_continuous(labels = comma) +
theme_bw()
plot21
png(file="plot20.png",width=800, height=800)
plot20
dev.off()
png(file="plot21.png",width=800, height=800)
plot21
dev.off()
#Map of Germany with all Cities
city_points = as.data.frame(matrix(1:4*nlevels(as.factor(BikeData$Town)), nrow = nlevels(as.factor(BikeData$Town)), ncol = 4))
names(city_points)[1]="Town"
names(city_points)[2]="Value_Mean"
names(city_points)[3]="lon"
names(city_points)[4]="lat"
city_points$Town=levels(as.factor(BikeData$Town))
for(i in 1:nlevels(as.factor(BikeData$Town))){
d=BikeData[BikeData$Town %in% city_points$Town[i],]
city_points$Value_Mean[i]=mean(d$Value)
city_points$lon[i]=d$City_Lon[1]
city_points$lat[i]=d$City_Lat[1]
}
library(ggmap)
myLocation<-c(5, 46.5,   16, 55.5)
myMap <- get_stamenmap(bbox=myLocation, maptype="terrain-background", zoom=7)
#ggmap(myMap)
plot22 = ggmap(myMap)+
geom_point(aes(x=as.numeric(lon), y=as.numeric(lat), color = as.numeric(Value_Mean)), data=city_points, size = 4) +
geom_label_repel(data = city_points,aes(x = lon, y = lat, label = Town)) +
theme_bw() +
labs(title = "Städte des Datensatzes"
, y = "Längengrad"
, x = "Breitengrad"
, color = "Durchschnittl. \n Radverkehr")
plot22
png(file="plot22.png",width=600, height=800)
plot22
dev.off()
rm(list=setdiff(ls(), "BikeData"))
#Weather Data Visualization
weather = as.data.frame(matrix(1:2*nlevels(as.factor(BikeData$Months)), nrow = nlevels(as.factor(BikeData$Months)), ncol = 2))
names(weather)[1]="Rain"
names(weather)[2]="Temperature"
weather$Months=levels(as.factor(BikeData$Months))
for(i in 1:nlevels(as.factor(BikeData$Months))){
d=BikeData[BikeData$Months %in% weather$Months[i],]
weather$Rain[i]=max(d$Rain)
weather$Temperature[i]=mean(d$Temperature)
}
weather$Months = as.numeric(weather$Months)
weather$Months = c("01","02","03","04","05","06","07","08","09","10","11","12")
#Beides kombiniert und korrekte Graphen Beschriftung
ggplot(NULL, aes(v, p)) +
geom_bar(data=weather, aes(x = Months, y= Rain),stat="identity", fill = "lightblue", width=.5, position = "dodge") +
theme_bw() +
ggtitle("Monatliche Temperatur und der Niederschlag") +
xlab("Monat") +
geom_line(data=weather, mapping = aes(x = Months, y = Temperature, group = 1), size = 1 , color = "red") +
scale_y_continuous(name = "durchschn. Temperatur in C°",
sec.axis = sec_axis(~./5, name = "maximaler Niederschlag in mm")) +
theme(
axis.title.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue"))
#Beides kombiniert und korrekte Graphen Beschriftung
plot23 = ggplot(NULL, aes(v, p)) +
geom_bar(data=weather, aes(x = Months, y= Rain),stat="identity", fill = "lightblue", width=.5, position = "dodge") +
theme_bw() +
ggtitle("Monatliche Temperatur und der Niederschlag") +
xlab("Monat") +
geom_line(data=weather, mapping = aes(x = Months, y = Temperature, group = 1), size = 1 , color = "red") +
scale_y_continuous(name = "durchschn. Temperatur in C°",
sec.axis = sec_axis(~./5, name = "maximaler Niederschlag in mm")) +
theme(
axis.title.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue"))
plot23
png(file="plot23.png",width=600, height=800)
png(file="plot23.png",width=800, height=800)
plot23
dev.off()
weather = as.data.frame(matrix(1:3*nlevels(as.factor(BikeData$Months)), nrow = nlevels(as.factor(BikeData$Months)), ncol = 3))
names(weather)[1]="Rain"
names(weather)[2]="Temperature"
names(weather)[2]="Value_Mean"
weather$Months=levels(as.factor(BikeData$Months))
for(i in 1:nlevels(as.factor(BikeData$Months))){
d=BikeData[BikeData$Months %in% weather$Months[i],]
weather$Rain[i]=max(d$Rain)
weather$Temperature[i]=mean(d$Temperature)
city_points$Value_Mean[i]=mean(d$Value)
}
weather$Months = as.numeric(weather$Months)
weather$Months = c("01","02","03","04","05","06","07","08","09","10","11","12")
weather = as.data.frame(matrix(1:3*nlevels(as.factor(BikeData$Months)), nrow = nlevels(as.factor(BikeData$Months)), ncol = 3))
names(weather)[1]="Rain"
names(weather)[2]="Temperature"
names(weather)[2]="Value_Mean"
weather$Months=levels(as.factor(BikeData$Months))
for(i in 1:nlevels(as.factor(BikeData$Months))){
d=BikeData[BikeData$Months %in% weather$Months[i],]
weather$Rain[i]=max(d$Rain)
weather$Temperature[i]=mean(d$Temperature)
weather$Value_Mean[i]=mean(d$Value)
}
weather$Months = as.numeric(weather$Months)
weather$Months = c("01","02","03","04","05","06","07","08","09","10","11","12")
weather
weather = as.data.frame(matrix(1:3*nlevels(as.factor(BikeData$Months)), nrow = nlevels(as.factor(BikeData$Months)), ncol = 3))
names(weather)[1]="Rain"
names(weather)[2]="Temperature"
names(weather)[3]="Value_Mean"
weather$Months=levels(as.factor(BikeData$Months))
for(i in 1:nlevels(as.factor(BikeData$Months))){
d=BikeData[BikeData$Months %in% weather$Months[i],]
weather$Rain[i]=max(d$Rain)
weather$Temperature[i]=mean(d$Temperature)
weather$Value_Mean[i]=mean(d$Value)
}
weather$Months = c("01","02","03","04","05","06","07","08","09","10","11","12")
weather
plot24 = ggplot(NULL, aes(v, p)) +
geom_line(data=weather, mapping = aes(x = Months, y = Value_Mean, group = 1), size = 1 , color = "blue") +
theme_bw() +
ggtitle("Monatliche Temperatur und der Niederschlag") +
xlab("Monat") +
geom_line(data=weather, mapping = aes(x = Months, y = Temperature, group = 1), size = 1 , color = "red") +
scale_y_continuous(name = "durchschn. Temperatur in C°",
sec.axis = sec_axis(~./5, name = "maximaler Niederschlag in mm")) +
theme(
axis.title.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue"))
plot24
plot24 = ggplot(NULL, aes(v, p)) +
geom_line(data=weather, mapping = aes(x = Months, y = Value_Mean, group = 1), size = 1 , color = "blue") +
theme_bw() +
ggtitle("Monatliche Temperatur und der Niederschlag") +
xlab("Monat") +
geom_line(data=weather, mapping = aes(x = Months, y = Temperature, group = 1), size = 1 , color = "red") +
scale_y_continuous(name = "durchschn. Temperatur in C°",
sec.axis = sec_axis(~./10, name = "maximaler Niederschlag in mm")) +
theme(
axis.title.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue"))
plot24
plot23 = ggplot(NULL, aes(v, p)) +
geom_bar(data=weather, aes(x = Months, y= Rain),stat="identity", fill = "lightblue", width=.5, position = "dodge") +
theme_bw() +
ggtitle("Monatliche Temperatur und der Niederschlag") +
xlab("Monat") +
geom_line(data=weather, mapping = aes(x = Months, y = Temperature, group = 1), size = 1 , color = "red") +
scale_y_continuous(name = "durchschn. Temperatur in C°",
sec.axis = sec_axis(~./5, name = "maximaler Niederschlag in mm")) +
theme(
axis.title.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue"))
plot23
weather
plot23 = ggplot(NULL, aes(v, p)) +
geom_bar(data=weather, aes(x = Months, y= Rain),stat="identity", fill = "lightblue", width=.5, position = "dodge") +
theme_bw() +
ggtitle("Monatliche Temperatur und der Niederschlag") +
xlab("Monat") +
geom_line(data=weather, mapping = aes(x = Months, y = Temperature, group = 1), size = 1 , color = "red") +
scale_y_continuous(name = "durchschn. Temperatur in C°",
sec.axis = sec_axis(~.*2, name = "maximaler Niederschlag in mm")) +
theme(
axis.title.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue"))
plot23
plot23 = ggplot(NULL, aes(v, p)) +
geom_bar(data=weather, aes(x = Months, y= Rain),stat="identity", fill = "lightblue", width=.5, position = "dodge") +
theme_bw() +
ggtitle("Monatliche Temperatur und der Niederschlag") +
xlab("Monat") +
geom_line(data=weather, mapping = aes(x = Months, y = Temperature, group = 1), size = 1 , color = "red") +
scale_y_continuous(name = "durchschn. Temperatur in C°",
sec.axis = sec_axis(~.*1, name = "maximaler Niederschlag in mm")) +
theme(
axis.title.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue"))
plot23
plot24 = ggplot(NULL, aes(v, p)) +
geom_line(data=weather, mapping = aes(x = Months, y = Value_Mean, group = 1), size = 1 , color = "blue") +
theme_bw() +
ggtitle("Monatliche Temperatur und der Niederschlag") +
xlab("Monat") +
geom_line(data=weather, mapping = aes(x = Months, y = Temperature, group = 1), size = 1 , color = "red") +
scale_y_continuous(name = "durchschn. Temperatur in C°",
sec.axis = sec_axis(~./10, name = "maximaler Niederschlag in mm")) +
theme(
axis.title.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue"))
plot24
plot24 = ggplot(NULL, aes(v, p)) +
geom_line(data=weather, mapping = aes(x = Months, y = Value_Mean/5, group = 1), size = 1 , color = "blue") +
theme_bw() +
ggtitle("Monatliche Temperatur und der Niederschlag") +
xlab("Monat") +
geom_line(data=weather, mapping = aes(x = Months, y = Temperature, group = 1), size = 1 , color = "red") +
scale_y_continuous(name = "durchschn. Temperatur in C°",
sec.axis = sec_axis(~./5, name = "maximaler Niederschlag in mm")) +
theme(
axis.title.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue"))
plot24
plot24 = ggplot(NULL, aes(v, p)) +
geom_line(data=weather, mapping = aes(x = Months, y = Value_Mean/5, group = 1), size = 1 , color = "blue") +
theme_bw() +
ggtitle("Monatliche Temperatur und der Niederschlag") +
xlab("Monat") +
geom_line(data=weather, mapping = aes(x = Months, y = Temperature, group = 1), size = 1 , color = "red") +
scale_y_continuous(name = "durchschn. Temperatur in C°",
sec.axis = sec_axis(~.*5, name = "maximaler Niederschlag in mm")) +
theme(
axis.title.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue"))
plot24
plot24 = ggplot(NULL, aes(v, p)) +
geom_line(data=weather, mapping = aes(x = Months, y = Value_Mean/5, group = 1), size = 1 , color = "blue") +
theme_bw() +
ggtitle("Monatliche Temperatur und der Radverkehr") +
xlab("Monat") +
geom_line(data=weather, mapping = aes(x = Months, y = Temperature, group = 1), size = 1 , color = "red") +
scale_y_continuous(name = "durchschn. Temperatur in C°",
sec.axis = sec_axis(~.*5, name = "Durchschnitt des Radverkehrs je Stunde")) +
theme(
axis.title.y = element_text(color = "red"),
axis.title.y.right = element_text(color = "blue"))
plot24
png(file="plot24.png",width=800, height=800)
plot24
dev.off()
png(file="plot23.png",width=800, height=800)
plot23
dev.off()
